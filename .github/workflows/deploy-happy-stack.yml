name: Deploy Happy

# on: deployment

on:
  push:
    branches:
      - main
      - ebezzi/ecs-cicd
  pull_request:
    branches: "*"

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  DOCKER_REPO: ${{ secrets.ECR_REPO }}/

jobs:
  upgrade:
    runs-on: ubuntu-20.04
    steps:
      - name: Configure AWS Prod Credentials
        uses: aws-actions/configure-aws-credentials@v1
        if: github.event.deployment.environment == 'prod'
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_PROD_ROLE_TO_ASSUME }}
          role-duration-seconds: 2700
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        if: github.event.deployment.environment != 'prod'
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 2700
      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ECR_REPO }}
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.deployment.sha }}
      - uses: avakar/set-deployment-status@v1
        with:
          state: in_progress
        env:
          GITHUB_TOKEN: ${{ secrets.SCI_GITHUB_TOKEN }}
      - name: Update deployment
        env:
          TFE_TOKEN: ${{ secrets.TFE_TOKEN }}
        run: |
          happy --profile="" --env ${{ github.event.deployment.environment }} update explorer-${{ github.event.deployment.environment }}stack --tag ${{ github.event.deployment.payload.tag }}
      - name: Set deployment status to success if no errors
        uses: avakar/set-deployment-status@v1
        with:
          state: success
        env:
          GITHUB_TOKEN: ${{ secrets.SCI_GITHUB_TOKEN }}
      - name: Set deployment status to failure if errors
        uses: avakar/set-deployment-status@v1
        if: failure()
        with:
          state: failure
        env:
          GITHUB_TOKEN: ${{ secrets.SCI_GITHUB_TOKEN }}
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,commit,author,eventName,workflow,job,mention
          mention: 'here'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: failure() && github.ref == 'refs/heads/main'
